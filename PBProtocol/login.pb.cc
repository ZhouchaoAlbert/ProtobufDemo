// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PBLoginFieldDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PBLoginField>
     _instance;
} _PBLoginField_default_instance_;
class PBLoginListDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PBLoginList>
     _instance;
} _PBLoginList_default_instance_;

namespace protobuf_login_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, szusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, szaccount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, szpassword_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, remember_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, autologin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, startup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginField, updatetime_),
  3,
  0,
  1,
  2,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLoginList, loginlist_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(PBLoginField)},
  { 21, 27, sizeof(PBLoginList)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLoginField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLoginList_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "login.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PBLoginField_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PBLoginField_default_instance_);_PBLoginList_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PBLoginList_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013login.proto\"\243\001\n\014PBLoginField\022\016\n\006userid"
      "\030\001 \002(\r\022\022\n\nszusername\030\002 \001(\t\022\021\n\tszaccount\030"
      "\003 \001(\t\022\022\n\nszpassword\030\004 \001(\t\022\020\n\010remember\030\005 "
      "\001(\010\022\021\n\tautologin\030\006 \001(\010\022\017\n\007startup\030\007 \001(\010\022"
      "\022\n\nupdatetime\030\010 \001(\r\"/\n\013PBLoginList\022 \n\tlo"
      "ginlist\030\001 \003(\0132\r.PBLoginField"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "login.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_login_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLoginField::kUseridFieldNumber;
const int PBLoginField::kSzusernameFieldNumber;
const int PBLoginField::kSzaccountFieldNumber;
const int PBLoginField::kSzpasswordFieldNumber;
const int PBLoginField::kRememberFieldNumber;
const int PBLoginField::kAutologinFieldNumber;
const int PBLoginField::kStartupFieldNumber;
const int PBLoginField::kUpdatetimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLoginField::PBLoginField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLoginField)
}
PBLoginField::PBLoginField(const PBLoginField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  szusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szusername()) {
    szusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szusername_);
  }
  szaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szaccount()) {
    szaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szaccount_);
  }
  szpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_szpassword()) {
    szpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szpassword_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&updatetime_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(updatetime_));
  // @@protoc_insertion_point(copy_constructor:PBLoginField)
}

void PBLoginField::SharedCtor() {
  _cached_size_ = 0;
  szusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szaccount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&updatetime_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(updatetime_));
}

PBLoginField::~PBLoginField() {
  // @@protoc_insertion_point(destructor:PBLoginField)
  SharedDtor();
}

void PBLoginField::SharedDtor() {
  szusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szaccount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  szpassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBLoginField::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLoginField::descriptor() {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLoginField& PBLoginField::default_instance() {
  protobuf_login_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLoginField* PBLoginField::New(::google::protobuf::Arena* arena) const {
  PBLoginField* n = new PBLoginField;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLoginField::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLoginField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!szusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*szusername_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!szaccount_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*szaccount_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!szpassword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*szpassword_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 248u) {
    ::memset(&userid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&updatetime_) -
        reinterpret_cast<char*>(&userid_)) + sizeof(updatetime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBLoginField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLoginField)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 userid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string szusername = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szusername().data(), static_cast<int>(this->szusername().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBLoginField.szusername");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string szaccount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szaccount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szaccount().data(), static_cast<int>(this->szaccount().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBLoginField.szaccount");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string szpassword = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_szpassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->szpassword().data(), static_cast<int>(this->szpassword().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBLoginField.szpassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool remember = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_remember();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remember_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool autologin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_autologin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &autologin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool startup = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_startup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &startup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 updatetime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_updatetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &updatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLoginField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLoginField)
  return false;
#undef DO_
}

void PBLoginField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLoginField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 userid = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->userid(), output);
  }

  // optional string szusername = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szusername().data(), static_cast<int>(this->szusername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBLoginField.szusername");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->szusername(), output);
  }

  // optional string szaccount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szaccount().data(), static_cast<int>(this->szaccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBLoginField.szaccount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->szaccount(), output);
  }

  // optional string szpassword = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szpassword().data(), static_cast<int>(this->szpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBLoginField.szpassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->szpassword(), output);
  }

  // optional bool remember = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->remember(), output);
  }

  // optional bool autologin = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->autologin(), output);
  }

  // optional bool startup = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->startup(), output);
  }

  // optional uint32 updatetime = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->updatetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBLoginField)
}

::google::protobuf::uint8* PBLoginField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBLoginField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 userid = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->userid(), target);
  }

  // optional string szusername = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szusername().data(), static_cast<int>(this->szusername().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBLoginField.szusername");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->szusername(), target);
  }

  // optional string szaccount = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szaccount().data(), static_cast<int>(this->szaccount().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBLoginField.szaccount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->szaccount(), target);
  }

  // optional string szpassword = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->szpassword().data(), static_cast<int>(this->szpassword().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBLoginField.szpassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->szpassword(), target);
  }

  // optional bool remember = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->remember(), target);
  }

  // optional bool autologin = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->autologin(), target);
  }

  // optional bool startup = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->startup(), target);
  }

  // optional uint32 updatetime = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->updatetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBLoginField)
  return target;
}

size_t PBLoginField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLoginField)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 userid = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->userid());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string szusername = 2;
    if (has_szusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szusername());
    }

    // optional string szaccount = 3;
    if (has_szaccount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szaccount());
    }

    // optional string szpassword = 4;
    if (has_szpassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->szpassword());
    }

  }
  if (_has_bits_[0 / 32] & 240u) {
    // optional bool remember = 5;
    if (has_remember()) {
      total_size += 1 + 1;
    }

    // optional bool autologin = 6;
    if (has_autologin()) {
      total_size += 1 + 1;
    }

    // optional bool startup = 7;
    if (has_startup()) {
      total_size += 1 + 1;
    }

    // optional uint32 updatetime = 8;
    if (has_updatetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->updatetime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLoginField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLoginField)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLoginField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLoginField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLoginField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLoginField)
    MergeFrom(*source);
  }
}

void PBLoginField::MergeFrom(const PBLoginField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLoginField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_szusername();
      szusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szusername_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_szaccount();
      szaccount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szaccount_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_szpassword();
      szpassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.szpassword_);
    }
    if (cached_has_bits & 0x00000008u) {
      userid_ = from.userid_;
    }
    if (cached_has_bits & 0x00000010u) {
      remember_ = from.remember_;
    }
    if (cached_has_bits & 0x00000020u) {
      autologin_ = from.autologin_;
    }
    if (cached_has_bits & 0x00000040u) {
      startup_ = from.startup_;
    }
    if (cached_has_bits & 0x00000080u) {
      updatetime_ = from.updatetime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PBLoginField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLoginField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLoginField::CopyFrom(const PBLoginField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLoginField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLoginField::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000008) != 0x00000008) return false;
  return true;
}

void PBLoginField::Swap(PBLoginField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLoginField::InternalSwap(PBLoginField* other) {
  using std::swap;
  szusername_.Swap(&other->szusername_);
  szaccount_.Swap(&other->szaccount_);
  szpassword_.Swap(&other->szpassword_);
  swap(userid_, other->userid_);
  swap(remember_, other->remember_);
  swap(autologin_, other->autologin_);
  swap(startup_, other->startup_);
  swap(updatetime_, other->updatetime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLoginField::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLoginField

// required uint32 userid = 1;
bool PBLoginField::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PBLoginField::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
void PBLoginField::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
void PBLoginField::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
::google::protobuf::uint32 PBLoginField::userid() const {
  // @@protoc_insertion_point(field_get:PBLoginField.userid)
  return userid_;
}
void PBLoginField::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.userid)
}

// optional string szusername = 2;
bool PBLoginField::has_szusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PBLoginField::set_has_szusername() {
  _has_bits_[0] |= 0x00000001u;
}
void PBLoginField::clear_has_szusername() {
  _has_bits_[0] &= ~0x00000001u;
}
void PBLoginField::clear_szusername() {
  szusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szusername();
}
const ::std::string& PBLoginField::szusername() const {
  // @@protoc_insertion_point(field_get:PBLoginField.szusername)
  return szusername_.GetNoArena();
}
void PBLoginField::set_szusername(const ::std::string& value) {
  set_has_szusername();
  szusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLoginField.szusername)
}
#if LANG_CXX11
void PBLoginField::set_szusername(::std::string&& value) {
  set_has_szusername();
  szusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLoginField.szusername)
}
#endif
void PBLoginField::set_szusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szusername();
  szusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLoginField.szusername)
}
void PBLoginField::set_szusername(const char* value, size_t size) {
  set_has_szusername();
  szusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLoginField.szusername)
}
::std::string* PBLoginField::mutable_szusername() {
  set_has_szusername();
  // @@protoc_insertion_point(field_mutable:PBLoginField.szusername)
  return szusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBLoginField::release_szusername() {
  // @@protoc_insertion_point(field_release:PBLoginField.szusername)
  clear_has_szusername();
  return szusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBLoginField::set_allocated_szusername(::std::string* szusername) {
  if (szusername != NULL) {
    set_has_szusername();
  } else {
    clear_has_szusername();
  }
  szusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szusername);
  // @@protoc_insertion_point(field_set_allocated:PBLoginField.szusername)
}

// optional string szaccount = 3;
bool PBLoginField::has_szaccount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PBLoginField::set_has_szaccount() {
  _has_bits_[0] |= 0x00000002u;
}
void PBLoginField::clear_has_szaccount() {
  _has_bits_[0] &= ~0x00000002u;
}
void PBLoginField::clear_szaccount() {
  szaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szaccount();
}
const ::std::string& PBLoginField::szaccount() const {
  // @@protoc_insertion_point(field_get:PBLoginField.szaccount)
  return szaccount_.GetNoArena();
}
void PBLoginField::set_szaccount(const ::std::string& value) {
  set_has_szaccount();
  szaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLoginField.szaccount)
}
#if LANG_CXX11
void PBLoginField::set_szaccount(::std::string&& value) {
  set_has_szaccount();
  szaccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLoginField.szaccount)
}
#endif
void PBLoginField::set_szaccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szaccount();
  szaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLoginField.szaccount)
}
void PBLoginField::set_szaccount(const char* value, size_t size) {
  set_has_szaccount();
  szaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLoginField.szaccount)
}
::std::string* PBLoginField::mutable_szaccount() {
  set_has_szaccount();
  // @@protoc_insertion_point(field_mutable:PBLoginField.szaccount)
  return szaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBLoginField::release_szaccount() {
  // @@protoc_insertion_point(field_release:PBLoginField.szaccount)
  clear_has_szaccount();
  return szaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBLoginField::set_allocated_szaccount(::std::string* szaccount) {
  if (szaccount != NULL) {
    set_has_szaccount();
  } else {
    clear_has_szaccount();
  }
  szaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szaccount);
  // @@protoc_insertion_point(field_set_allocated:PBLoginField.szaccount)
}

// optional string szpassword = 4;
bool PBLoginField::has_szpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PBLoginField::set_has_szpassword() {
  _has_bits_[0] |= 0x00000004u;
}
void PBLoginField::clear_has_szpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
void PBLoginField::clear_szpassword() {
  szpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szpassword();
}
const ::std::string& PBLoginField::szpassword() const {
  // @@protoc_insertion_point(field_get:PBLoginField.szpassword)
  return szpassword_.GetNoArena();
}
void PBLoginField::set_szpassword(const ::std::string& value) {
  set_has_szpassword();
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLoginField.szpassword)
}
#if LANG_CXX11
void PBLoginField::set_szpassword(::std::string&& value) {
  set_has_szpassword();
  szpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLoginField.szpassword)
}
#endif
void PBLoginField::set_szpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szpassword();
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLoginField.szpassword)
}
void PBLoginField::set_szpassword(const char* value, size_t size) {
  set_has_szpassword();
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLoginField.szpassword)
}
::std::string* PBLoginField::mutable_szpassword() {
  set_has_szpassword();
  // @@protoc_insertion_point(field_mutable:PBLoginField.szpassword)
  return szpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBLoginField::release_szpassword() {
  // @@protoc_insertion_point(field_release:PBLoginField.szpassword)
  clear_has_szpassword();
  return szpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBLoginField::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword != NULL) {
    set_has_szpassword();
  } else {
    clear_has_szpassword();
  }
  szpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szpassword);
  // @@protoc_insertion_point(field_set_allocated:PBLoginField.szpassword)
}

// optional bool remember = 5;
bool PBLoginField::has_remember() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PBLoginField::set_has_remember() {
  _has_bits_[0] |= 0x00000010u;
}
void PBLoginField::clear_has_remember() {
  _has_bits_[0] &= ~0x00000010u;
}
void PBLoginField::clear_remember() {
  remember_ = false;
  clear_has_remember();
}
bool PBLoginField::remember() const {
  // @@protoc_insertion_point(field_get:PBLoginField.remember)
  return remember_;
}
void PBLoginField::set_remember(bool value) {
  set_has_remember();
  remember_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.remember)
}

// optional bool autologin = 6;
bool PBLoginField::has_autologin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PBLoginField::set_has_autologin() {
  _has_bits_[0] |= 0x00000020u;
}
void PBLoginField::clear_has_autologin() {
  _has_bits_[0] &= ~0x00000020u;
}
void PBLoginField::clear_autologin() {
  autologin_ = false;
  clear_has_autologin();
}
bool PBLoginField::autologin() const {
  // @@protoc_insertion_point(field_get:PBLoginField.autologin)
  return autologin_;
}
void PBLoginField::set_autologin(bool value) {
  set_has_autologin();
  autologin_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.autologin)
}

// optional bool startup = 7;
bool PBLoginField::has_startup() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PBLoginField::set_has_startup() {
  _has_bits_[0] |= 0x00000040u;
}
void PBLoginField::clear_has_startup() {
  _has_bits_[0] &= ~0x00000040u;
}
void PBLoginField::clear_startup() {
  startup_ = false;
  clear_has_startup();
}
bool PBLoginField::startup() const {
  // @@protoc_insertion_point(field_get:PBLoginField.startup)
  return startup_;
}
void PBLoginField::set_startup(bool value) {
  set_has_startup();
  startup_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.startup)
}

// optional uint32 updatetime = 8;
bool PBLoginField::has_updatetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PBLoginField::set_has_updatetime() {
  _has_bits_[0] |= 0x00000080u;
}
void PBLoginField::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000080u;
}
void PBLoginField::clear_updatetime() {
  updatetime_ = 0u;
  clear_has_updatetime();
}
::google::protobuf::uint32 PBLoginField::updatetime() const {
  // @@protoc_insertion_point(field_get:PBLoginField.updatetime)
  return updatetime_;
}
void PBLoginField::set_updatetime(::google::protobuf::uint32 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.updatetime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLoginList::kLoginlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLoginList::PBLoginList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_login_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBLoginList)
}
PBLoginList::PBLoginList(const PBLoginList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      loginlist_(from.loginlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBLoginList)
}

void PBLoginList::SharedCtor() {
  _cached_size_ = 0;
}

PBLoginList::~PBLoginList() {
  // @@protoc_insertion_point(destructor:PBLoginList)
  SharedDtor();
}

void PBLoginList::SharedDtor() {
}

void PBLoginList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLoginList::descriptor() {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLoginList& PBLoginList::default_instance() {
  protobuf_login_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLoginList* PBLoginList::New(::google::protobuf::Arena* arena) const {
  PBLoginList* n = new PBLoginList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLoginList::Clear() {
// @@protoc_insertion_point(message_clear_start:PBLoginList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  loginlist_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PBLoginList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBLoginList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBLoginField loginlist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_loginlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBLoginList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBLoginList)
  return false;
#undef DO_
}

void PBLoginList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBLoginList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBLoginField loginlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loginlist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->loginlist(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBLoginList)
}

::google::protobuf::uint8* PBLoginList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBLoginList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBLoginField loginlist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->loginlist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->loginlist(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBLoginList)
  return target;
}

size_t PBLoginList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBLoginList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .PBLoginField loginlist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->loginlist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->loginlist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLoginList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBLoginList)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLoginList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLoginList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBLoginList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBLoginList)
    MergeFrom(*source);
  }
}

void PBLoginList::MergeFrom(const PBLoginList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBLoginList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  loginlist_.MergeFrom(from.loginlist_);
}

void PBLoginList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBLoginList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLoginList::CopyFrom(const PBLoginList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBLoginList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLoginList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->loginlist())) return false;
  return true;
}

void PBLoginList::Swap(PBLoginList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLoginList::InternalSwap(PBLoginList* other) {
  using std::swap;
  loginlist_.InternalSwap(&other->loginlist_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLoginList::GetMetadata() const {
  protobuf_login_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_login_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLoginList

// repeated .PBLoginField loginlist = 1;
int PBLoginList::loginlist_size() const {
  return loginlist_.size();
}
void PBLoginList::clear_loginlist() {
  loginlist_.Clear();
}
const ::PBLoginField& PBLoginList::loginlist(int index) const {
  // @@protoc_insertion_point(field_get:PBLoginList.loginlist)
  return loginlist_.Get(index);
}
::PBLoginField* PBLoginList::mutable_loginlist(int index) {
  // @@protoc_insertion_point(field_mutable:PBLoginList.loginlist)
  return loginlist_.Mutable(index);
}
::PBLoginField* PBLoginList::add_loginlist() {
  // @@protoc_insertion_point(field_add:PBLoginList.loginlist)
  return loginlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBLoginField >*
PBLoginList::mutable_loginlist() {
  // @@protoc_insertion_point(field_mutable_list:PBLoginList.loginlist)
  return &loginlist_;
}
const ::google::protobuf::RepeatedPtrField< ::PBLoginField >&
PBLoginList::loginlist() const {
  // @@protoc_insertion_point(field_list:PBLoginList.loginlist)
  return loginlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
