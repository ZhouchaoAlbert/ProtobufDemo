// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef PROTOBUF_login_2eproto__INCLUDED
#define PROTOBUF_login_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class PBLoginField;
class PBLoginFieldDefaultTypeInternal;
extern PBLoginFieldDefaultTypeInternal _PBLoginField_default_instance_;

namespace protobuf_login_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_login_2eproto

// ===================================================================

class PBLoginField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBLoginField) */ {
 public:
  PBLoginField();
  virtual ~PBLoginField();

  PBLoginField(const PBLoginField& from);

  inline PBLoginField& operator=(const PBLoginField& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBLoginField(PBLoginField&& from) noexcept
    : PBLoginField() {
    *this = ::std::move(from);
  }

  inline PBLoginField& operator=(PBLoginField&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBLoginField& default_instance();

  static inline const PBLoginField* internal_default_instance() {
    return reinterpret_cast<const PBLoginField*>(
               &_PBLoginField_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PBLoginField* other);
  friend void swap(PBLoginField& a, PBLoginField& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBLoginField* New() const PROTOBUF_FINAL { return New(NULL); }

  PBLoginField* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PBLoginField& from);
  void MergeFrom(const PBLoginField& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PBLoginField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string szusername = 2;
  bool has_szusername() const;
  void clear_szusername();
  static const int kSzusernameFieldNumber = 2;
  const ::std::string& szusername() const;
  void set_szusername(const ::std::string& value);
  #if LANG_CXX11
  void set_szusername(::std::string&& value);
  #endif
  void set_szusername(const char* value);
  void set_szusername(const char* value, size_t size);
  ::std::string* mutable_szusername();
  ::std::string* release_szusername();
  void set_allocated_szusername(::std::string* szusername);

  // optional string szaccount = 3;
  bool has_szaccount() const;
  void clear_szaccount();
  static const int kSzaccountFieldNumber = 3;
  const ::std::string& szaccount() const;
  void set_szaccount(const ::std::string& value);
  #if LANG_CXX11
  void set_szaccount(::std::string&& value);
  #endif
  void set_szaccount(const char* value);
  void set_szaccount(const char* value, size_t size);
  ::std::string* mutable_szaccount();
  ::std::string* release_szaccount();
  void set_allocated_szaccount(::std::string* szaccount);

  // optional string szpassword = 4;
  bool has_szpassword() const;
  void clear_szpassword();
  static const int kSzpasswordFieldNumber = 4;
  const ::std::string& szpassword() const;
  void set_szpassword(const ::std::string& value);
  #if LANG_CXX11
  void set_szpassword(::std::string&& value);
  #endif
  void set_szpassword(const char* value);
  void set_szpassword(const char* value, size_t size);
  ::std::string* mutable_szpassword();
  ::std::string* release_szpassword();
  void set_allocated_szpassword(::std::string* szpassword);

  // required uint32 userid = 1;
  bool has_userid() const;
  void clear_userid();
  static const int kUseridFieldNumber = 1;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // optional bool remember = 5;
  bool has_remember() const;
  void clear_remember();
  static const int kRememberFieldNumber = 5;
  bool remember() const;
  void set_remember(bool value);

  // optional bool autologin = 6;
  bool has_autologin() const;
  void clear_autologin();
  static const int kAutologinFieldNumber = 6;
  bool autologin() const;
  void set_autologin(bool value);

  // optional bool startup = 7;
  bool has_startup() const;
  void clear_startup();
  static const int kStartupFieldNumber = 7;
  bool startup() const;
  void set_startup(bool value);

  // optional uint32 updatetime = 8;
  bool has_updatetime() const;
  void clear_updatetime();
  static const int kUpdatetimeFieldNumber = 8;
  ::google::protobuf::uint32 updatetime() const;
  void set_updatetime(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:PBLoginField)
 private:
  void set_has_userid();
  void clear_has_userid();
  void set_has_szusername();
  void clear_has_szusername();
  void set_has_szaccount();
  void clear_has_szaccount();
  void set_has_szpassword();
  void clear_has_szpassword();
  void set_has_remember();
  void clear_has_remember();
  void set_has_autologin();
  void clear_has_autologin();
  void set_has_startup();
  void clear_has_startup();
  void set_has_updatetime();
  void clear_has_updatetime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr szusername_;
  ::google::protobuf::internal::ArenaStringPtr szaccount_;
  ::google::protobuf::internal::ArenaStringPtr szpassword_;
  ::google::protobuf::uint32 userid_;
  bool remember_;
  bool autologin_;
  bool startup_;
  ::google::protobuf::uint32 updatetime_;
  friend struct protobuf_login_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBLoginField

// required uint32 userid = 1;
inline bool PBLoginField::has_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBLoginField::set_has_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBLoginField::clear_has_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBLoginField::clear_userid() {
  userid_ = 0u;
  clear_has_userid();
}
inline ::google::protobuf::uint32 PBLoginField::userid() const {
  // @@protoc_insertion_point(field_get:PBLoginField.userid)
  return userid_;
}
inline void PBLoginField::set_userid(::google::protobuf::uint32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.userid)
}

// optional string szusername = 2;
inline bool PBLoginField::has_szusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBLoginField::set_has_szusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBLoginField::clear_has_szusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBLoginField::clear_szusername() {
  szusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szusername();
}
inline const ::std::string& PBLoginField::szusername() const {
  // @@protoc_insertion_point(field_get:PBLoginField.szusername)
  return szusername_.GetNoArena();
}
inline void PBLoginField::set_szusername(const ::std::string& value) {
  set_has_szusername();
  szusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLoginField.szusername)
}
#if LANG_CXX11
inline void PBLoginField::set_szusername(::std::string&& value) {
  set_has_szusername();
  szusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLoginField.szusername)
}
#endif
inline void PBLoginField::set_szusername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szusername();
  szusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLoginField.szusername)
}
inline void PBLoginField::set_szusername(const char* value, size_t size) {
  set_has_szusername();
  szusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLoginField.szusername)
}
inline ::std::string* PBLoginField::mutable_szusername() {
  set_has_szusername();
  // @@protoc_insertion_point(field_mutable:PBLoginField.szusername)
  return szusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLoginField::release_szusername() {
  // @@protoc_insertion_point(field_release:PBLoginField.szusername)
  clear_has_szusername();
  return szusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLoginField::set_allocated_szusername(::std::string* szusername) {
  if (szusername != NULL) {
    set_has_szusername();
  } else {
    clear_has_szusername();
  }
  szusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szusername);
  // @@protoc_insertion_point(field_set_allocated:PBLoginField.szusername)
}

// optional string szaccount = 3;
inline bool PBLoginField::has_szaccount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBLoginField::set_has_szaccount() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBLoginField::clear_has_szaccount() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBLoginField::clear_szaccount() {
  szaccount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szaccount();
}
inline const ::std::string& PBLoginField::szaccount() const {
  // @@protoc_insertion_point(field_get:PBLoginField.szaccount)
  return szaccount_.GetNoArena();
}
inline void PBLoginField::set_szaccount(const ::std::string& value) {
  set_has_szaccount();
  szaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLoginField.szaccount)
}
#if LANG_CXX11
inline void PBLoginField::set_szaccount(::std::string&& value) {
  set_has_szaccount();
  szaccount_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLoginField.szaccount)
}
#endif
inline void PBLoginField::set_szaccount(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szaccount();
  szaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLoginField.szaccount)
}
inline void PBLoginField::set_szaccount(const char* value, size_t size) {
  set_has_szaccount();
  szaccount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLoginField.szaccount)
}
inline ::std::string* PBLoginField::mutable_szaccount() {
  set_has_szaccount();
  // @@protoc_insertion_point(field_mutable:PBLoginField.szaccount)
  return szaccount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLoginField::release_szaccount() {
  // @@protoc_insertion_point(field_release:PBLoginField.szaccount)
  clear_has_szaccount();
  return szaccount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLoginField::set_allocated_szaccount(::std::string* szaccount) {
  if (szaccount != NULL) {
    set_has_szaccount();
  } else {
    clear_has_szaccount();
  }
  szaccount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szaccount);
  // @@protoc_insertion_point(field_set_allocated:PBLoginField.szaccount)
}

// optional string szpassword = 4;
inline bool PBLoginField::has_szpassword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBLoginField::set_has_szpassword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBLoginField::clear_has_szpassword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBLoginField::clear_szpassword() {
  szpassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_szpassword();
}
inline const ::std::string& PBLoginField::szpassword() const {
  // @@protoc_insertion_point(field_get:PBLoginField.szpassword)
  return szpassword_.GetNoArena();
}
inline void PBLoginField::set_szpassword(const ::std::string& value) {
  set_has_szpassword();
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBLoginField.szpassword)
}
#if LANG_CXX11
inline void PBLoginField::set_szpassword(::std::string&& value) {
  set_has_szpassword();
  szpassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBLoginField.szpassword)
}
#endif
inline void PBLoginField::set_szpassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_szpassword();
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBLoginField.szpassword)
}
inline void PBLoginField::set_szpassword(const char* value, size_t size) {
  set_has_szpassword();
  szpassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBLoginField.szpassword)
}
inline ::std::string* PBLoginField::mutable_szpassword() {
  set_has_szpassword();
  // @@protoc_insertion_point(field_mutable:PBLoginField.szpassword)
  return szpassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBLoginField::release_szpassword() {
  // @@protoc_insertion_point(field_release:PBLoginField.szpassword)
  clear_has_szpassword();
  return szpassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBLoginField::set_allocated_szpassword(::std::string* szpassword) {
  if (szpassword != NULL) {
    set_has_szpassword();
  } else {
    clear_has_szpassword();
  }
  szpassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), szpassword);
  // @@protoc_insertion_point(field_set_allocated:PBLoginField.szpassword)
}

// optional bool remember = 5;
inline bool PBLoginField::has_remember() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBLoginField::set_has_remember() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBLoginField::clear_has_remember() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBLoginField::clear_remember() {
  remember_ = false;
  clear_has_remember();
}
inline bool PBLoginField::remember() const {
  // @@protoc_insertion_point(field_get:PBLoginField.remember)
  return remember_;
}
inline void PBLoginField::set_remember(bool value) {
  set_has_remember();
  remember_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.remember)
}

// optional bool autologin = 6;
inline bool PBLoginField::has_autologin() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBLoginField::set_has_autologin() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBLoginField::clear_has_autologin() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBLoginField::clear_autologin() {
  autologin_ = false;
  clear_has_autologin();
}
inline bool PBLoginField::autologin() const {
  // @@protoc_insertion_point(field_get:PBLoginField.autologin)
  return autologin_;
}
inline void PBLoginField::set_autologin(bool value) {
  set_has_autologin();
  autologin_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.autologin)
}

// optional bool startup = 7;
inline bool PBLoginField::has_startup() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBLoginField::set_has_startup() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBLoginField::clear_has_startup() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBLoginField::clear_startup() {
  startup_ = false;
  clear_has_startup();
}
inline bool PBLoginField::startup() const {
  // @@protoc_insertion_point(field_get:PBLoginField.startup)
  return startup_;
}
inline void PBLoginField::set_startup(bool value) {
  set_has_startup();
  startup_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.startup)
}

// optional uint32 updatetime = 8;
inline bool PBLoginField::has_updatetime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PBLoginField::set_has_updatetime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PBLoginField::clear_has_updatetime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PBLoginField::clear_updatetime() {
  updatetime_ = 0u;
  clear_has_updatetime();
}
inline ::google::protobuf::uint32 PBLoginField::updatetime() const {
  // @@protoc_insertion_point(field_get:PBLoginField.updatetime)
  return updatetime_;
}
inline void PBLoginField::set_updatetime(::google::protobuf::uint32 value) {
  set_has_updatetime();
  updatetime_ = value;
  // @@protoc_insertion_point(field_set:PBLoginField.updatetime)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_login_2eproto__INCLUDED
